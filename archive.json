{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2022-10-13T01:46:35.726301+00:00",
  "repo": "bemasc/draft-xu-risav",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 5,
      "id": "I_kwDOIGC7185TNPOf",
      "title": "What should we say about cases where the handshake fails?",
      "url": "https://github.com/bemasc/draft-xu-risav/issues/5",
      "state": "CLOSED",
      "author": "BasilGuo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "**DESC**: This question is about IKE failure in Section Control Plane.\r\n**OPEN QUESTION**: What should we say about cases where the handshake fails?  To be truly secure, all traffic from that AS would have to be dropped...",
      "createdAt": "2022-10-04T09:55:37Z",
      "updatedAt": "2022-10-06T02:15:34Z",
      "closedAt": "2022-10-06T02:15:34Z",
      "comments": [
        {
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "body": "There may be a number of reasons that cause the handshake or the link fails. When one handshake fails, the ACS would know nothing SAs about the peer AS; vice versa. Arrived packets that should be processed with RISAV would be failed to locate available SAs. Then this packet should be processed like a common packet that not be protected with an IPsec AH/ESP header. So do the source and destination ASBR. When the handshake is complete and running after a while one ACS's link failed, the peer ACS would detect the link is failed with the keepalive packets and remove or deprecate the relative SAs. The keepalive packet is defined in {{RFC3948}} while it is not in NAT traversal. After a grace period, the traffic will be recovered. But the failure should be reported to the administrator with the operations protocols. This would decrease the effect on inter-AS traffic.",
          "createdAt": "2022-10-04T13:50:48Z",
          "updatedAt": "2022-10-04T13:50:48Z"
        },
        {
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "body": "My concern is principally related to downgrade attacks on RISAV.\r\n\r\nConsider an MITM attacker between the two ASes.  If this attacker simply drops all packets to the contact IPs, the attacker can prevent the two ASes from ever performing an IKE handshake.  In HTTPS, this would be similar to blocking port 443.  HTTPS simply \"fails hard\" in this case, to ensure that the attacker can only produce a DoS.  We could do the same, but I suspect AS operators would be concerned about the possibility of accidental outages, especially when the RISAV deployment is new.  However, if the ASes simply fall back to non-RISAV communication, then the attacker can disable RISAV.\r\n\r\nI think our best option is probably to add a boolean flag like `testing` to `RISAVAnnouncement`.  If this flag is true, it means that the operator does not guarantee the uptime of this ACS, so other ASes should fall back to non-RISAV.  Then each AS can decide whether its own RISAV implementation is stable enough to remove the fallback.\r\n\r\nI agree that failures should be reported to the administrator, even in testing mode, so that AS operators can tell whether RISAV is working correctly.",
          "createdAt": "2022-10-04T13:56:24Z",
          "updatedAt": "2022-10-04T13:56:24Z"
        },
        {
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "body": "MitM could be prevented by the PKI and hierarchical CA in current practice. As we have RPKI now, shall we assume that the PKI and hierarchical CA is also deployed? If so, the MitM would be prevented.\r\nUnfortunately, this could not relieve the attack path as a line topo. If the stub AS has only one path to the transit AS and deploys RISAV, the attack drops all the traffic to the contact IP making the RISAV never be enabled.",
          "createdAt": "2022-10-04T14:59:11Z",
          "updatedAt": "2022-10-04T14:59:11Z"
        },
        {
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "body": "> MitM could be prevented by the PKI and hierarchical CA in current practice.\r\n\r\nYes, I agree.\r\n\r\n> the attack drops all the traffic to the contact IP making the RISAV never be enabled.\r\n\r\nRight, and if this is allowed it mostly defeats the protections provided by the PKI and CA.  I think we should try to fix this vulnerability, while also making it easy for operators to experiment with RISAV without risking accidental outages",
          "createdAt": "2022-10-04T15:10:15Z",
          "updatedAt": "2022-10-04T15:10:15Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOIGC7185TNPd3",
      "title": "Does IKEv2 have an authenticated permanent rejection option that would help here?",
      "url": "https://github.com/bemasc/draft-xu-risav/issues/6",
      "state": "OPEN",
      "author": "BasilGuo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "**DESC**: This is about how to disable RISAV normally and orderly.\r\n**TODO**: Discuss changes to the contact IP, check if there are any race conditions between\r\nactivation and deactivation, IKEv2 handshakes in progress, SA expiration, etc.\r\n**OPEN QUESTION**: Does IKEv2 have an authenticated permanent rejection option that would help here?",
      "createdAt": "2022-10-04T09:56:19Z",
      "updatedAt": "2022-10-06T11:51:36Z",
      "closedAt": null,
      "comments": [
        {
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "body": "SA has its own expiration time. So the SA would expire automatically. I think it should have a keepalive mechanism for the IKE parties to keep in touch. If the already existing keepalive mechanism is not suitable for RISAV (the existing one is for NAT traversal), it should implement keepalive itself. However, a timeout interval may be also enough.\r\n\r\nThe IKEv2 has such an authenticated permanent rejection option that would help the IKE nodes to reject connections quickly. But, when an IKE node is down or unfortunately crashed, i.e. in an abnormal case, how it can send out such an option? And in a normal case, RISAV maybe not care about the disabling time. It may care more about the key-rollover time in my way.",
          "createdAt": "2022-10-06T11:51:36Z",
          "updatedAt": "2022-10-06T11:51:36Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOIGC7185TNPmO",
      "title": "How do peers express a preference or requirement for transport or tunnel mode?",
      "url": "https://github.com/bemasc/draft-xu-risav/issues/7",
      "state": "OPEN",
      "author": "BasilGuo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "**DESC**: This is proposed in Section Data Plane.\r\n**OPEN QUESTION**: How do peers express a preference or requirement for transport or tunnel mode?",
      "createdAt": "2022-10-04T09:56:42Z",
      "updatedAt": "2022-10-04T13:58:09Z",
      "closedAt": null,
      "comments": [
        {
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "body": "I believe IKE is quite flexible and probably offers this capability (via USE_TRANSPORT_MODE), but I'm not quite sure how it works.  We need some advice from an IKE expert.",
          "createdAt": "2022-10-04T13:58:08Z",
          "updatedAt": "2022-10-04T13:58:08Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOIGC7185TNPt2",
      "title": "Do we need multiple contact IPs per AS, to support fragmented ASes?",
      "url": "https://github.com/bemasc/draft-xu-risav/issues/8",
      "state": "OPEN",
      "author": "BasilGuo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "**DESC**: This is proposed together with #9 in Section Data Plane.\r\n**OPEN QUESTION**: Do we need multiple contact IPs per AS, to support fragmented ASes?",
      "createdAt": "2022-10-04T09:57:01Z",
      "updatedAt": "2022-10-12T21:16:26Z",
      "closedAt": null,
      "comments": [
        {
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "body": "Single contact IP would suffer from Single Point Failure while Multiple contact IPs may lead to complexity in implementation. On another point, multiple contact IPs could shrink the IKE negotiation time but the collaboration of the IKE parties and the division of the IKE parties that one IKE node should keep in touch with are also complex tasks. In the long run, multiple contact IPs should be an important agenda for RISAV.\r\nThe full deployment of RISAV requires one deployer should keep in touch with almost all deployers which are a number of ASes, but a paper published at IMC15: [Are We One Hop Away from a Better Internet?](https://conferences2.sigcomm.org/imc/2015/papers/p523.pdf) shows that the average AS path to access Internet content is about 3.5 hops. Thus I think the IKE connection size should not be too large. So the multiple contact IPs may not be the first thing we should think about now. And I think a hierarchical structure of RISAV may be more useful for large-scale deployment but this may also cause larger complexity.",
          "createdAt": "2022-10-06T12:18:02Z",
          "updatedAt": "2022-10-06T12:18:02Z"
        },
        {
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "body": "> Single contact IP would suffer from Single Point Failure\r\n\r\nI don't know that this is true.  I think the ACS can probably be implemented as a loosely-coupled anycast service.\r\n\r\nThe reason I think we might need multiple contact IPs is for ASes that have fragmented routing.  If a single AS is composed of several \"islands\" that have no route to each other, then each island would need its own contact IP.  However, I'm not familiar enough with BGP to understand if this is really allowed, or how common it is.",
          "createdAt": "2022-10-12T21:16:25Z",
          "updatedAt": "2022-10-12T21:16:25Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOIGC7185TNQMC",
      "title": "PROBLEM: Can we negotiate an extension to ESP that covers the IP header?  Or could we always send from the contact IP and encode the ASBR ID in the low bits of the SPI?",
      "url": "https://github.com/bemasc/draft-xu-risav/issues/9",
      "state": "OPEN",
      "author": "BasilGuo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "**DESC**: This is proposed together with #8 in Section Data Plane.\r\n**PROBLEM**: ESP doesn't protect the source IP, so a packet could be replayed by changing the source IP.  Can we negotiate an extension to ESP that covers the IP header?  Or could we always send from the contact IP and encode the ASBR ID in the low bits of the SPI?",
      "createdAt": "2022-10-04T09:58:27Z",
      "updatedAt": "2022-10-06T12:55:30Z",
      "closedAt": null,
      "comments": [
        {
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "body": "We may need the help of ipsecme wg.\r\n\r\nI think the packet sent from the contact IP may not be a proper choice because the contact IP cannot take over the whole AS's traffic. ",
          "createdAt": "2022-10-06T12:55:29Z",
          "updatedAt": "2022-10-06T12:55:29Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOIGC7185TOm2N",
      "title": "Clarify relationship between contact IP and ACS",
      "url": "https://github.com/bemasc/draft-xu-risav/issues/11",
      "state": "CLOSED",
      "author": "bemasc",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "The text currently discusses both an \"AS Control Server\" and a \"contact IP\", which is the IP address of the ACS.  We should adjust the terminology to make this relationship clearer and avoid having multiple terms for the same thing.",
      "createdAt": "2022-10-04T14:03:44Z",
      "updatedAt": "2022-10-04T15:13:35Z",
      "closedAt": "2022-10-04T15:13:35Z",
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOIGC7184_34jK",
      "title": "Alternative abstract",
      "url": "https://github.com/bemasc/draft-xu-risav/pull/1",
      "state": "MERGED",
      "author": "bemasc",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "This version of the abstract presents the document as a protocol, not an architecture.  While the current draft is not a fully detailed protocol, I think we should try to move in that direction, even if we don't know all the details yet.",
      "createdAt": "2022-09-29T16:54:30Z",
      "updatedAt": "2022-09-30T02:01:11Z",
      "baseRepository": "bemasc/draft-xu-risav",
      "baseRefName": "main",
      "baseRefOid": "2b67f62ed9c1a48beb0b42129b860b96dacf4bcf",
      "headRepository": "bemasc/draft-xu-risav",
      "headRefName": "bemasc-abstract",
      "headRefOid": "60b3e0132c0dffbd4a53fb84a4bdd117ddbd0c13",
      "closedAt": "2022-09-30T02:01:11Z",
      "mergedAt": "2022-09-30T02:01:11Z",
      "mergedBy": "BasilGuo",
      "mergeCommit": {
        "oid": "0cfe036e33531a4a961b6c40ef8c10f4b9060a96"
      },
      "comments": [
        {
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, Ben. It looks great!",
          "createdAt": "2022-09-30T01:52:08Z",
          "updatedAt": "2022-09-30T01:52:08Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOIGC7184_5s2_",
      "title": "update: intro and overview",
      "url": "https://github.com/bemasc/draft-xu-risav/pull/2",
      "state": "CLOSED",
      "author": "BasilGuo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "1. RFC added to section introduction & normal refs\r\n2. Section overview subtle modification.\r\n[It's my fault. I just press down Ctrl+Enter for a new line, but it is submitted. All right, just a try. :)]",
      "createdAt": "2022-09-30T02:40:11Z",
      "updatedAt": "2022-09-30T06:06:19Z",
      "baseRepository": "bemasc/draft-xu-risav",
      "baseRefName": "main",
      "baseRefOid": "0cfe036e33531a4a961b6c40ef8c10f4b9060a96",
      "headRepository": "bemasc/draft-xu-risav",
      "headRefName": "BasilGuo-overview",
      "headRefOid": "31e734c44e2d6fa32bae8bc93285b2620d60ccb7",
      "closedAt": "2022-09-30T06:06:19Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOIGC7184_7GdK",
      "title": "modify section overview",
      "url": "https://github.com/bemasc/draft-xu-risav/pull/3",
      "state": "MERGED",
      "author": "BasilGuo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This commits modifies the section overview.\r\n1. introduce static-static ECDH\r\n2. RISAV process",
      "createdAt": "2022-09-30T09:33:59Z",
      "updatedAt": "2022-10-01T01:31:56Z",
      "baseRepository": "bemasc/draft-xu-risav",
      "baseRefName": "main",
      "baseRefOid": "0cfe036e33531a4a961b6c40ef8c10f4b9060a96",
      "headRepository": "bemasc/draft-xu-risav",
      "headRefName": "BasilGuo-overview",
      "headRefOid": "fee7423e18f365f98746f46ba26145318cf03f41",
      "closedAt": "2022-10-01T01:10:50Z",
      "mergedAt": "2022-10-01T01:10:50Z",
      "mergedBy": "BasilGuo",
      "mergeCommit": {
        "oid": "ca5afa535baf4efb78da46a160be012a918041a6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGC7185DMAFS",
          "commit": {
            "abbreviatedOid": "fee7423"
          },
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-30T18:37:54Z",
          "updatedAt": "2022-09-30T18:41:18Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "\r\nI think we can simplify the requirement on the number of contact IPs.\r\n\r\n```suggestion\r\nBefore deploying RISAV, each AS sets a contact IP representative. When negotiating or consulting with one AS, the peer MUST first communicate with this contact IP. The AS MUST publish exactly one contact IP for each supported address family (i.e. IPv4 and/or IPv6).\r\n```",
              "createdAt": "2022-09-30T18:37:54Z",
              "updatedAt": "2022-09-30T18:41:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGC7185DM4Ns",
          "commit": {
            "abbreviatedOid": "fee7423"
          },
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-01T01:10:04Z",
          "updatedAt": "2022-10-01T01:10:04Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "Yes, there may be some engineering considerations that I miss, like hot standby.",
              "createdAt": "2022-10-01T01:10:04Z",
              "updatedAt": "2022-10-01T01:10:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGC7185DM44R",
          "commit": {
            "abbreviatedOid": "fee7423"
          },
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-01T01:31:56Z",
          "updatedAt": "2022-10-01T01:31:56Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "So sorry, it's my fault. I may wrongly commit & merge as not familiar with GitHub. I would add them when submitting the next PR as this PR has been closed.",
              "createdAt": "2022-10-01T01:31:56Z",
              "updatedAt": "2022-10-01T01:31:56Z"
            }
          ]
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOIGC7185AFfak",
      "title": "Reorganize draft contents",
      "url": "https://github.com/bemasc/draft-xu-risav/pull/4",
      "state": "MERGED",
      "author": "bemasc",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Major changes:\r\n* Move time-based rotation and static-static ECDH into \"possible extensions\"\r\n* Define an optional tunnel mode\r\n* Define the RPKI object format\r\n* Expand security and operational considerations\r\n* Various other text relocations for organizational purposes",
      "createdAt": "2022-10-03T20:40:30Z",
      "updatedAt": "2022-10-04T07:05:10Z",
      "baseRepository": "bemasc/draft-xu-risav",
      "baseRefName": "main",
      "baseRefOid": "ca5afa535baf4efb78da46a160be012a918041a6",
      "headRepository": "bemasc/draft-xu-risav",
      "headRefName": "bemasc-reorg",
      "headRefOid": "76ee8b7bcf68d33fd845ce89d733b80e0d6d046e",
      "closedAt": "2022-10-04T07:05:10Z",
      "mergedAt": "2022-10-04T07:05:10Z",
      "mergedBy": "BasilGuo",
      "mergeCommit": {
        "oid": "bc1d21fa9a78320d61db0f8d9c4b9620dd0dab04"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGC7185DUSTe",
          "commit": {
            "abbreviatedOid": "76ee8b7"
          },
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I may wonder shall we still use an ACS together with the contact IP, as the contact IP is actually the ACS's  IP in the initial design. Their functions are overlapped. So I recommend we should explain what are contact IP and ACS respectively.",
          "createdAt": "2022-10-04T07:03:40Z",
          "updatedAt": "2022-10-04T07:03:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOIGC7185AHuXI",
      "title": "update: Open Question & TODO",
      "url": "https://github.com/bemasc/draft-xu-risav/pull/10",
      "state": "MERGED",
      "author": "BasilGuo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "1. section Terminology\r\n2. OQ: IKE handshake fails\r\n3. TODO: changes when disabling RISAV\r\n4. TODO: NAT scenario.",
      "createdAt": "2022-10-04T10:02:09Z",
      "updatedAt": "2022-10-04T15:04:05Z",
      "baseRepository": "bemasc/draft-xu-risav",
      "baseRefName": "main",
      "baseRefOid": "bc1d21fa9a78320d61db0f8d9c4b9620dd0dab04",
      "headRepository": "bemasc/draft-xu-risav",
      "headRefName": "BasilGuo-todo-problem",
      "headRefOid": "43e3cb1353ecfbf4a728290a63c808c4e9889dcc",
      "closedAt": "2022-10-04T15:04:04Z",
      "mergedAt": "2022-10-04T15:04:04Z",
      "mergedBy": "BasilGuo",
      "mergeCommit": {
        "oid": "ad2046cf7d7069bf3a9914e0c7fbbbc3e6bfa2b1"
      },
      "comments": [
        {
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "body": "@bemasc @Netinplug @wangnetsg \r\nI have created some issues #5  #6 #7 #8 #9 with these open questions.\r\nWe could close them with PR when we have a consensus.",
          "createdAt": "2022-10-04T10:07:19Z",
          "updatedAt": "2022-10-04T13:18:48Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGC7185DWZVM",
          "commit": {
            "abbreviatedOid": "4beea1f"
          },
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-04T13:35:16Z",
          "updatedAt": "2022-10-04T13:40:58Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "I think it would be better to move this to #5 so we can discuss the possibilities.  Then if we agree on a solution we can remove the \"open question\" here.\r\n\r\nMy main concern here is that an attacker could prevent the IKE handshake from ever succeeding, and it might be hard to tell the difference between an attack and an accident.",
              "createdAt": "2022-10-04T13:35:16Z",
              "updatedAt": "2022-10-04T13:40:58Z"
            },
            {
              "originalPosition": 42,
              "body": "The IKE keepalive mechanism seems to be only for NAT traversal mode with UDP encapsulation, so I'm not sure that it applies here.\r\n\r\nMy real concern is about more complicated edge cases, such as when a network disables RISAV in the middle of a handshake, or when one network activates RISAV for the first time at the same time that another network is deactivating it.  If the networks disagree about whether RISAV is supposed to work, this could result in an outage (especially if we are \"strict\" to prevent any attacker from disabling RISAV).\r\n\r\nRather than trying to solve this here, I think we should open an issue or wait for input from the working group.",
              "createdAt": "2022-10-04T13:40:03Z",
              "updatedAt": "2022-10-04T13:40:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGC7185DXAL-",
          "commit": {
            "abbreviatedOid": "4beea1f"
          },
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-04T14:43:52Z",
          "updatedAt": "2022-10-04T14:43:52Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Thanks for moving this text to #5.  Please also remove it here.",
              "createdAt": "2022-10-04T14:43:52Z",
              "updatedAt": "2022-10-04T14:43:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGC7185DXENk",
          "commit": {
            "abbreviatedOid": "4beea1f"
          },
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-04T14:53:05Z",
          "updatedAt": "2022-10-04T14:53:05Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "I have removed that yet. See  https://github.com/bemasc/draft-xu-risav/pull/10/commits/43e3cb1353ecfbf4a728290a63c808c4e9889dcc.",
              "createdAt": "2022-10-04T14:53:05Z",
              "updatedAt": "2022-10-04T14:55:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGC7185DXEoO",
          "commit": {
            "abbreviatedOid": "4beea1f"
          },
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-04T14:54:00Z",
          "updatedAt": "2022-10-04T14:54:01Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Thanks",
              "createdAt": "2022-10-04T14:54:01Z",
              "updatedAt": "2022-10-04T14:54:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOIGC7185AJEUc",
      "title": "Rename \"control server\" to \"contact server\"",
      "url": "https://github.com/bemasc/draft-xu-risav/pull/12",
      "state": "MERGED",
      "author": "bemasc",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Fixes #11",
      "createdAt": "2022-10-04T14:38:13Z",
      "updatedAt": "2022-10-04T15:23:04Z",
      "baseRepository": "bemasc/draft-xu-risav",
      "baseRefName": "main",
      "baseRefOid": "ad2046cf7d7069bf3a9914e0c7fbbbc3e6bfa2b1",
      "headRepository": "bemasc/draft-xu-risav",
      "headRefName": "bemasc-acs",
      "headRefOid": "dbed24b5d1954ba98d4832a7614e7abd9f4cb1ac",
      "closedAt": "2022-10-04T15:13:34Z",
      "mergedAt": "2022-10-04T15:13:34Z",
      "mergedBy": "BasilGuo",
      "mergeCommit": {
        "oid": "062dd54931c725f008e25d7b942eddac13b52b3a"
      },
      "comments": [
        {
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "body": "It looks like this was merged before the conflict could be corrected.",
          "createdAt": "2022-10-04T15:17:44Z",
          "updatedAt": "2022-10-04T15:17:44Z"
        },
        {
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "body": "I've reverted this (#13) and committed the change directly to `main` to avoid further conflicts.",
          "createdAt": "2022-10-04T15:21:15Z",
          "updatedAt": "2022-10-04T15:21:15Z"
        },
        {
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks : )\r\n\r\n",
          "createdAt": "2022-10-04T15:23:03Z",
          "updatedAt": "2022-10-04T15:23:03Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOIGC7185DXNIN",
          "commit": {
            "abbreviatedOid": "dbed24b"
          },
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "There are some conflicts with PR #10, I have removed the description in #10 and reserved #12.",
          "createdAt": "2022-10-04T15:13:09Z",
          "updatedAt": "2022-10-04T15:13:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOIGC7185AJRMN",
      "title": "Revert \"Rename \"control server\" to \"contact server\"\"",
      "url": "https://github.com/bemasc/draft-xu-risav/pull/13",
      "state": "MERGED",
      "author": "bemasc",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-04T15:18:04Z",
      "updatedAt": "2022-10-04T15:18:23Z",
      "baseRepository": "bemasc/draft-xu-risav",
      "baseRefName": "main",
      "baseRefOid": "062dd54931c725f008e25d7b942eddac13b52b3a",
      "headRepository": "bemasc/draft-xu-risav",
      "headRefName": "revert-12-bemasc-acs",
      "headRefOid": "a0a4b57df8f020297abf6b3bf3a81fa13da6e8ee",
      "closedAt": "2022-10-04T15:18:15Z",
      "mergedAt": "2022-10-04T15:18:15Z",
      "mergedBy": "bemasc",
      "mergeCommit": {
        "oid": "e9538db80fcb735282f0d527a589b6a1a2128d99"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 14,
      "id": "PR_kwDOIGC7185ALLDK",
      "title": "Add a \"testing\" flag and discuss downgrade resistance",
      "url": "https://github.com/bemasc/draft-xu-risav/pull/14",
      "state": "MERGED",
      "author": "bemasc",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Fixes #5",
      "createdAt": "2022-10-05T00:56:08Z",
      "updatedAt": "2022-10-06T02:15:34Z",
      "baseRepository": "bemasc/draft-xu-risav",
      "baseRefName": "main",
      "baseRefOid": "aae7e07fce9e86c3f64393ab1bd901ba40926136",
      "headRepository": "bemasc/draft-xu-risav",
      "headRefName": "bemasc-testing",
      "headRefOid": "6b916cd2ca97feac5278529a24f7d00bffea6e92",
      "closedAt": "2022-10-06T02:15:34Z",
      "mergedAt": "2022-10-06T02:15:34Z",
      "mergedBy": "BasilGuo",
      "mergeCommit": {
        "oid": "e69c6b3f186d0ff6c27ab36d317c4cdabec28dfb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOIGC7185Db1_a",
          "commit": {
            "abbreviatedOid": "6b916cd"
          },
          "author": "BasilGuo",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-05T12:49:39Z",
          "updatedAt": "2022-10-05T12:49:39Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "As I have known, the RFC 4301-4303 say both IPsec AH and ESP have a sequence number field while the AH maybe not check this field and the ESP must check this field. It's up to the IPsec receiver. Shall we require that the ASBR implemented RISAV must check this sequence number field no matter whether it is AH or ESP?",
              "createdAt": "2022-10-05T12:49:39Z",
              "updatedAt": "2022-10-05T12:49:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOIGC7185DenGL",
          "commit": {
            "abbreviatedOid": "6b916cd"
          },
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-05T22:02:45Z",
          "updatedAt": "2022-10-05T22:02:45Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "The problem is that we are in \"multi-sender\" mode, sharing a single SA across many ASBRs.  Per [RFC 4302 Section 3.4.3](https://datatracker.ietf.org/doc/html/rfc4302#section-3.4.3), this makes the sequence number field unusable:\r\n\r\n>    However, this standard specifies no mechanisms for providing anti-\r\n>    replay for a multi-sender SA (unicast or multicast).  In the absence\r\n>    of negotiation (or manual configuration) of an anti-replay mechanism\r\n>    for such an SA, it is recommended that sender and receiver checking\r\n>    of the Sequence Number for the SA be disabled\r\n\r\nThis is because the different senders will have different sequence numbers, but the receiver has no way to distinguish the different senders.  This is why I've removed the sequence number entirely from the RISAV-AH header.\r\n\r\nIn Tunnel Mode, the different ASBRs are instructed to use distinct source IPs for RISAV.  This allows the receiver to maintain separate sequence number tracking for each sender, so sequence numbers work correctly and can be used for anti-replay.",
              "createdAt": "2022-10-05T22:02:45Z",
              "updatedAt": "2022-10-05T22:02:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOIGC7185AiCt3",
      "title": "v01: format justification",
      "url": "https://github.com/bemasc/draft-xu-risav/pull/15",
      "state": "MERGED",
      "author": "BasilGuo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "update as the author-tools tips including\r\n1. non-used normal ref,\r\n2. stream type using IETF,\r\n3. and downgrade ref in section Control Plane.\r\n\r\nThis will be submitted as version 01.",
      "createdAt": "2022-10-11T01:54:42Z",
      "updatedAt": "2022-10-11T01:56:15Z",
      "baseRepository": "bemasc/draft-xu-risav",
      "baseRefName": "main",
      "baseRefOid": "e69c6b3f186d0ff6c27ab36d317c4cdabec28dfb",
      "headRepository": "bemasc/draft-xu-risav",
      "headRefName": "BasilGuo-v01",
      "headRefOid": "5f0af55fff9340c27b69a97d60a99784ae0889bb",
      "closedAt": "2022-10-11T01:56:15Z",
      "mergedAt": "2022-10-11T01:56:14Z",
      "mergedBy": "BasilGuo",
      "mergeCommit": {
        "oid": "8c01734a31eebf434de24c45bdaab1a2b549a036"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 16,
      "id": "PR_kwDOIGC7185Ar0Bn",
      "title": "Editorial adjustments",
      "url": "https://github.com/bemasc/draft-xu-risav/pull/16",
      "state": "OPEN",
      "author": "bemasc",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "This change adjusts the presentation and explanation of the content to make it easier to read and understand. Some text has been made shorter for simplicity, and additional explanation has been added where necessary.",
      "createdAt": "2022-10-12T21:10:29Z",
      "updatedAt": "2022-10-12T21:10:29Z",
      "baseRepository": "bemasc/draft-xu-risav",
      "baseRefName": "main",
      "baseRefOid": "8c01734a31eebf434de24c45bdaab1a2b549a036",
      "headRepository": "bemasc/draft-xu-risav",
      "headRefName": "bemasc-cleanup",
      "headRefOid": "3ace9a19a1ddea5e8254320ce2998c5eba40315a",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}